@page "/transactionlist/addtransaction"
@inject HttpClient httpClient;
@inject NavigationManager NavigationManager;
@using GZFuel.Blazor.Shared.DTO.Transaction;

@using GZFuel.Model.Entities;

<h3>add transaction</h3>

@if(isLoading)
{
	<p> Loading ... </p>
} else
{
	<div class="row">

       <div class="col-md-6">
		   <label class="form-label">Customer Id</label>
		   <input class="form-control" @bind="@transaction.CustomerID"/> 
		   <button class="btn btn-primary" @onclick="ChooseCustomer">Choose Customer</button>

       </div>

		<div class="col-md-6">
			<label class="form-label">Employee Id</label>
			<input class="form-control" @bind="@transaction.EmployeeID" />
			<button class="btn btn-primary" @onclick="ChooseCustomer">Choose Employee</button>


		</div>

		<div class="col-md-6">
			<label class="form-label">Date</label>
			<input class="form-control" type="datetime" @bind="@transaction.Date" />

		</div>

		<div class="col-md-6">

			<label class="form-label">Payment Method</label>
			<div class="form-check">
				<input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="0" checked>
				<label class="form-check-label" for="exampleRadios1">
					Cash
				</label>
			</div>
			<div class="form-check">
				<input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="1">
				<label class="form-check-label" for="exampleRadios2">
					Credit Card
				</label>
			</div>

		</div>







	</div>

}


@code {

	private Boolean isLoading = true;
	Transaction transaction { get; set; }
	IEnumerable <TransactionLine> transactionLines { get; set; }





	protected override async Task OnInitializedAsync()
	{
		transaction = new Transaction();
		transactionLines = new List<TransactionLine>();
		isLoading = false;
	}



	private void ChooseCustomer()
	{
		
	}

	private void ChooseEmployee()
	{
		
	}




}














