@page "/customerlist/customeredit/{Id:int?}"
@using GZFuel.Blazor.Shared.DTO.Customer;
@inject HttpClient httpClient;
@inject NavigationManager NavigationManager;


<h3>Customer Edit</h3>

@if (customer == null)
{
	<p>Loading ... </p>
}


<div class="row" >

	  <div class="col-md-6">
         
		  <label class="form-label"> Name </label>
		  <input class="form-control" @bind="@customer.Name"/>

	  
	  </div>

	<div class="col-md-6">

		<label class="form-label"> Surname </label>
		<input class="form-control" @bind="@customer.Surname" />


	</div>

	<div class="col-md-6">

		<label class="form-label"> Card Number </label>
		<input class="form-control" @bind="@customer.CardNumber" disabled="disabled"/>
	</div>

	

	
</div>

<div class="row">

<div class="col-md-12">

		<button class="btn btn-primary" @onclick="SaveItem">Save</button>

	</div>

	<div class="col-md-12">

		<button class="btn btn-danger" @onclick="OnCancel">Cancel</button>

	</div>
</div>









@code {
	[Parameter] public int? Id { get; set; }
	CustomerEditDTO customer{ get; set; }




	protected override async Task OnInitializedAsync()
	{
		if (Id==null)
		{
			customer = new();
		} else
		{

			customer = await httpClient.GetFromJsonAsync<CustomerEditDTO>($"customer/{Id}");

		}
	}


	private void OnCancel()
	{
		NavigationManager.NavigateTo("/customerlist");
	}

	private async Task SaveItem()
	{
		if (Id==null)
		{
			String cardNumber = CardGenerator();

			customer.CardNumber = cardNumber;

			var response = await httpClient.PostAsJsonAsync("Customer", customer);
			response.EnsureSuccessStatusCode();
			NavigationManager.NavigateTo("/customerlist");
			
			
		}
		else
		{
		 var response = 	await httpClient.PostAsJsonAsync($"Customer/{Id}", customer);
		}
		
	}


	public string CardGenerator()
	{
		Random random = new Random();
		string cardNumber = 'A' + random.Next(100000000, 999999999).ToString();
		return cardNumber;
	}



}
