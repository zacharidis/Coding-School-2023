using GZFuel.Model.Enums;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GZFuel.Model.Entities
{
    public class Transaction : BaseEntity
    {
        /**
         *  Transaction: ID, Date, EmployeeID, CustomerID, 
         *  PaymentMethod (enum), TotalValue
         * 
         */

          public int ID { get; set; }
          public DateTime Date { get; set; }
       
         public PaymentMethod PaymentMethod { get; set; }
          public decimal TotalValue { get; set; }


         public Transaction(PaymentMethod paymentMethod, decimal totalValue)
        {
            // ID = id; not here , the ID is auto generated by the database
            Date = DateTime.Now;

  

            PaymentMethod = paymentMethod;

            TotalValue = totalValue; // will have to calculate that but calculating all the transactionlines in it 
            TransactionLines = new List<TransactionLine>();
        }

        // relationships 

        public int EmployeeID { get; set; }
        public Employee Employee { get; set; }
        public int CustomerID { get; set; }
        public Customer Customer { get; set; }

         public   List<TransactionLine> TransactionLines { get; set; }




        //helper method to calculate the total value of the transaction

        public decimal CalculateTotalValue()
        {
            decimal total = 0;
            foreach (var transactionLine in TransactionLines)
            {
                total += transactionLine.TotalValue;
            }
            return total;
            //TODO the controller should call this method to calculate the total value of the transaction
            // and if it's > 50 then should only accept cash payment
        }

    }
}
